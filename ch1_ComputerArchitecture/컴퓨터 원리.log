컴퓨터의 원리
컴퓨터는 스위치 역할을 하는 트랜지스터라는 기능을 사용한다.

트랜지스터는 증폭 역할을 하기도 하지만, 컴퓨터에서 0과 1이라는 이진 스위치 기능을 한다.
프로그램이란 일련의 명령을 적은 묶음이다.

0과 1을 나타내는 데 1 bit가 필요하며, 트랜지스터(스위치) 하나가 이 역할을 수행한다.
즉, 16GB 램 메모리에는 16 x 8 x 1024 x 1024 x 1024 = 137,438,953,472 개의 트랜지스터가 들어있다.

컴퓨터는 연산을 빠르게 수행하여 프로그램을 실행시키는데, 이 때 연산의 주체는 CPU (중앙처리장치)이다.
CPU는 레지스터와 캐시로 이루어져있으며, 주 기억장치인 RAM과 보조기억장치 (HDD) 로 부터 전달받는 데이터로 연산을 수행한다.

1. HDD에서 먼저 프로그램 실행파일과 필요한 데이터를 RAM으로 복사한다.
2. RAM에서는 프로그램 실행 중 연산에 필요한 데이터와 그 주변 데이터를 CPU의 캐시로 복사한다.
   -> 이 때 관련 데이터를 연속된 메모리공간에 저장하면 성능 상 이점이 있다. RAM->캐시로 데이터 복사를 할 때 연산에 필요한 데이터와 그 주변
      메모리 공간의 데이터들을 같이 복사하기 때문이다.

   -> 일반적으로 다음 연산에 필요한 데이터는 이전 연산에 사용된 데이터와 연속되어 있는 경우가 많은데, 이 것을 데이터 지역성(data locality)
      이라고 한다.
3. 캐시로 복사된 데이터 중, 연산이 필요한 데이터를 실제로 연산하기 위해 캐시에서 레지스터로 복사한다.
   우리가 64비트 컴퓨터라고 할 때 이 64비트는 레지스터의 비트를 말한다.
   즉 한 번에 64비트씩 처리하는 64비트 컴퓨터는 32비트 컴퓨터보다 연산 속도가 빠르다.

참고로, 캐시->레지스터로 데이터를 복사해서 연산을 수행하지만, 만약 캐시에 필요한 데이터가 없다면 이를 '캐시 미스'라고 하고,
캐시를 비운 뒤, 다시 램 메모리에서 연산에 필요한 데이터를 캐시로 복사해온다. 이는 성능 저하의 요인이다.